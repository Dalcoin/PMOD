def nn_eos_temp_outpt_scripter(eos_file,g_list,format_eos_file,stand,tnum):
    assert str(type(eos_file)) == "<type 'str'>" , "Error: 'eos_file' is not a string"
    assert str(type(g_list)) == "<type 'list'>" , "Error: 'g_list' is not an list"
    assert str(type(format_eos_file)) == "<type 'str'>" , "Error: 'format_eos_file' is not a string"
    assert str(type(stand)) == "<type 'bool'>" , "Error: 'stand' is not a boolean"
    assert str(type(tnum)) == "<type 'list'>" , "Error: 'eos_file' is not a string"

    #grab_list = [111,106,107,108,109,110,111,30]
    #tnum = [3,10,20,30]
    #e.g. nn_eos_temp_outpt_scripter('N3LO_450_3NF9_NM_RAW.txt',grab_list,'N3LO_450_3NF9_NM_F.txt',True,tnum)
    
    s2 = "  "
    n = g_list[0]
    m = len(g_list[1:-1])
    rel_lines = list_file_grab(eos_file,g_list,True,True)
    if(stand == True):
        with open(format_eos_file,'a+') as fileout:
            fileout.write("Den     KF      E       KE       PE\n")  
            fileout.write("\n")
            fileout.write("T = " + str(tnum[1]) + "\n")
            inc = 2
            for i in range(tnum[-1]):
                kf = '%.4f' % float(rel_lines[i*m][2])
                den = '%.4f' % float(rel_lines[1+i*m][2])   
                warn = '%.4f' % float(rel_lines[2+i*m][2])
                if(abs(float(den)-float(warn)) >= 0.01):
                    print("Warning: check the "+str(i)+" evaluated density.")
                pot = '%.3f' % float(rel_lines[3+i*m][3])           
                ke = '%.3f' % float(rel_lines[4+i*m][3])                 
                ea = '%.3f' % float(rel_lines[5+i*m][2])
                out_str = str(kf)+s2+str(den)+s2+str(pot)+s2+str(ke)+s2+str(ea)
                fileout.write(str(out_str+"\n"))
                if(i>1 and i != (tnum[-1])-1):
                    nset = ((grab[-1])/tnum[0])
                    if((i+1)%nset == 0):
                        fileout.write(" \n")            
                        fileout.write(str("T = " + str(tnum[inc]) + "\n"))
                        inc = inc+1
    else:
        with open(format_eos_file,'a+') as fileout:
            inc = 2
            for i in range(tnum[-1]):
                kf = float(rel_lines[i*m][2])
                den = float(rel_lines[1+i*m][2])   
                warn = float(rel_lines[2+i*m][2])
                if(abs(float(den)-float(warn)) >= 0.01):
                    print("Warning: check the "+str(i)+" evaluated density.")
                pot = float(rel_lines[3+i*m][3])           
                ke = float(rel_lines[4+i*m][3])                 
                ea = float(rel_lines[5+i*m][2])
                out_str = str(kf)+s2+str(den)+s2+str(pot)+s2+str(ke)+s2+str(ea)
                fileout.write(str(out_str+"\n"))
    return None            
            
grab = [111,106,107,108,109,110,111,30]             
nn_eos_temp_outpt_scripter('N3LO_450_3NF9_NM_RAW.txt',grab,'N3LO_450_3NF9_NM_F.txt',True,[3,10,20,30])            
    
